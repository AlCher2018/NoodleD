<Window x:Class="WpfClient.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfClient"
        mc:Ignorable="d"
        Title="MainWindow" 
        WindowStyle="None" WindowState="Maximized" WindowStartupLocation="CenterScreen" 
        Closed="Window_Closed"
        >

    <Window.Resources>
        <local:MultiplyParamValueConverter x:Key="multiplyParamDefVal1Conv" DefaultValue="1"/>
        <local:MultiplyValueConverter x:Key="DishAddButtonFontSize" Multiplier="0.4"/>
        <local:GetDishMargin x:Key="getDishMargin"/>
        <local:GarnishBrushConverter x:Key="garnishBackgroundConverter" Mode="Background"/>
        <local:GarnishBrushConverter x:Key="garnishForegroundConverter" Mode="Foreground"/>
        <local:GarnishVisibilityConverter x:Key="garnishVisibilityConverter"/>

        <Style x:Key="langButtonBorderStyle" TargetType="Border">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Control.Foreground" Value="Black"/>
            <Setter Property="Height">
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource getMinValue}">
                        <Binding Path="ActualHeight" ElementName="gridLang" Converter="{StaticResource multiplyParamConv}" ConverterParameter="0.7" Mode="OneWay"/>
                        <Binding Path="ActualWidth" ElementName="gridMenuSide" Converter="{StaticResource multiplyParamConv}" ConverterParameter="0.7" Mode="OneWay"/>
                    </MultiBinding>
                </Setter.Value>
            </Setter>
            <Setter Property="Width" Value="{Binding Height, RelativeSource={RelativeSource Self}, Mode=OneWay}"/>
            <Setter Property="CornerRadius" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}, Converter={StaticResource multiplyParamConv}, ConverterParameter=0.5, Mode=OneWay}"/>
        </Style>
        <Style x:Key="langButtonBorderUncheckedStyle" TargetType="Border" BasedOn="{StaticResource langButtonBorderStyle}">
            <Setter Property="BorderBrush" Value="{DynamicResource appSelectedItemColor}"/>
            <Setter Property="Background" Value="{DynamicResource appNotSelectedItemColor}"/>
            <!--<EventSetter Event="Control.MouseUp" Handler="lblButtonLang_MouseDown"/>
            <EventSetter Event="Control.TouchUp" Handler="lblButtonLang_TouchDown"/>-->
            <Style.Triggers>
                <Trigger Property="Control.IsMouseOver" Value="True">
                    <Setter Property="Control.Background" Value="DarkViolet" />
                    <Setter Property="Control.Foreground" Value="LightYellow" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="langButtonBorderCheckedStyle" TargetType="Border" BasedOn="{StaticResource langButtonBorderStyle}">
            <Setter Property="BorderBrush" Value="{DynamicResource appSelectedItemColor}"/>
            <Setter Property="Background" Value="{DynamicResource appSelectedItemColor}"/>
            <Setter Property="Control.FontWeight" Value="Bold" />
        </Style>

        <Style x:Key="langTextStyle" TargetType="TextBlock" BasedOn="{StaticResource centeredElement}">
            <Setter Property="FontSize" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource AncestorType=Border}, Converter={StaticResource multiplyParamDefVal1Conv}, ConverterParameter=0.35, Mode=OneWay}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0,0,0,3"/>
        </Style>

        <Style x:Key="buttonOrderPrice">
            <Setter Property="Control.Background" Value="#FFEFB523"/>
            <Setter Property="Control.Foreground" Value="Black"/>
            <Setter Property="Control.FontSize" Value="20"/>
            <Setter Property="Control.FontWeight" Value="Bold"/>
            <!--<Style.Triggers>
                <Trigger Property="Control.IsMouseOver" Value="True">
                    <Setter Property="Control.Background" Value="LightPink" />
                </Trigger>
            </Style.Triggers>-->
        </Style>

        <ControlTemplate x:Key="menuListBoxItemTemplate" TargetType="{x:Type ListBoxItem}">
            <Border Background="{TemplateBinding Background}"
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}"
                Padding="{TemplateBinding Padding}" CornerRadius="{TemplateBinding Property=Border.CornerRadius}">
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
        </ControlTemplate>
        <DataTemplate x:Key="menuDataTemplate">
            <Grid Margin="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>
                <Image x:Name="menuItemImage" Margin="5"
                       Width="{Binding Path=ActualWidth, ElementName=gridMenuSide, Converter={StaticResource multiplyParamConv}, ConverterParameter=0.15}"
                       Height="{Binding Path=ActualWidth, ElementName=gridMenuSide, Converter={StaticResource multiplyParamConv}, ConverterParameter=0.15}">
                    <Image.Style>
                        <Style TargetType="Image">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                    <Setter Property="Source" Value="{Binding MenuFolder.ImageInv}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="False">
                                    <Setter Property="Source" Value="{Binding MenuFolder.Image}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                <TextBlock Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,5,0,5"
                           Text="{Binding langNames, Converter={StaticResource langDictToText}}"
                           FontSize="{Binding Path=ActualWidth, ElementName=gridMenuSide, Converter={StaticResource multiplyParamDefVal1Conv}, ConverterParameter=0.1}"/>
            </Grid>
        </DataTemplate>

        <Style x:Key="menuItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Margin" Value="10,10" />
            <Setter Property="Padding" Value="10,7" />
            <Setter Property="Border.CornerRadius" Value="10"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{DynamicResource appSelectedItemColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource appNotSelectedItemColor}"/>
            <Setter Property="Template" Value="{StaticResource menuListBoxItemTemplate}"/>
            <Style.Triggers>
                <!--<Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="Yellow"/>
                    --><!--<Setter Property="Background" Value="{DynamicResource mainMenuSelectedItemColor}"/>--><!--
                </Trigger>-->
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Background" Value="{DynamicResource appSelectedItemColor}"/>
                </Trigger>
                <!--<MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True"/>
                        <Condition Property="IsSelected" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Foreground" Value="{DynamicResource appSelectedItemColor}"/>
                </MultiTrigger>-->
                <!--<MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                        <Condition Property="Selector.IsSelected" Value="True"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Panel.Background"  Value="#3D26A0DA"/>
                    <Setter Property="Border.BorderBrush" Value="#FFFFA0DA"/>
                </MultiTrigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{DynamicResource ResourceKey={x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>-->

            </Style.Triggers>
        </Style>

        <Style x:Key="borderGarnish">
            <Setter Property="Control.Height" Value="{Binding RelativeSource={RelativeSource  AncestorType=Grid, Mode=FindAncestor}, Path=ActualHeight}"/>
            <Setter Property="Control.Width" Value="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}"/>
            <Setter Property="Border.Background" Value="{Binding SelectedGarnishes, Converter={StaticResource garnishBackgroundConverter}}"/>
            <Setter Property="Border.CornerRadius" Value="5"/>
        </Style>

        <Style x:Key="garnishTextStyle" TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Width" Value="{Binding Converter={StaticResource getAppSetValue}, ConverterParameter=dishPanelGarnishBaseWidth}"/>
            <Setter Property="FontSize" Value="{Binding Converter={StaticResource getAppSetValue}, ConverterParameter=dishPanelTextFontSize}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Padding" Value="5"/>
        </Style>

        <Style x:Key="garnishPriceStyle" TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Width" Value="{Binding Converter={StaticResource getAppSetValue}, ConverterParameter=dishPanelGarnishBaseWidth}"/>
            <Setter Property="FontSize" Value="{Binding Converter={StaticResource getAppSetValue}, ConverterParameter=dishPanelTextFontSize}"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="0,0,0,2"/>
        </Style>

        <DropShadowEffect x:Key="shadowEffect" Direction="270"  Color="#FFCF446B" Opacity="0.7" 
                          ShadowDepth="{Binding Converter={StaticResource getAppSetValue}, ConverterParameter=dishPanelAddButtonShadowDepth}" 
                          BlurRadius="{Binding Converter={StaticResource getAppSetValue}, ConverterParameter=dishPanelAddButtonShadowBlurRadius}"/>

        <!-- r-радиус закругления уголков, w/h - ширина/высота фигуры, R - радиус внутр.круга, d - расст.от границ вн.круга до загругления d=(w-2(r+R))/2
        координаты точек- 1:0,r 2:r,0 3:w-r,0 4:w,r 5:w,h-r 6:w-r,h 7:r+2R+d,h 8:r+d,h 9:r,h 10:0,h-r
        для w=100, h=100, r=10, R=30, d=10: 
            Data="M0,10 A10,10 90 0 1 10,0 L90,0 A10,10 90 0 1 100,10 L100,90 A10,10 90 0 1 90,100 L80,100 C80,55 20,55 20,100 L10,100 A10,10 90 0 1 0,90 Z"
        для w=140, h=100, r=10, R=30, d=25: 
            Data="M0,10 A10,10 90 0 1 10,0 L120,0 A10,10 90 0 1 130,10 L130,90 A10,10 90 0 1 120,100 L95,100 C100,55 30,55 35,100 L10,100 A10,10 90 0 1 0,90 Z"
        -->
        <Canvas x:Key="garnBase1" x:Shared="False" Background="White" Width="130" Height="100">
            <Path Fill="{StaticResource appBackgroundColor}" 
                  Data="M0,10 A10,10 90 0 1 10,0 L120,0 A10,10 90 0 1 130,10 L130,90 A10,10 90 0 1 120,100 L95,100 C100,55 30,55 35,100 L10,100 A10,10 90 0 1 0,90 Z"/>
        </Canvas>

        <Canvas x:Key="garnBase" x:Shared="False" Background="Transparent" Width="150" Height="100">
            <Path Fill="{StaticResource appBackgroundColor}">
                <Path.Data>
                    <CombinedGeometry GeometryCombineMode="Exclude">
                        <CombinedGeometry.Geometry1>
                            <RectangleGeometry Rect="0,0,150,100" RadiusX="10" RadiusY="10"/>
                        </CombinedGeometry.Geometry1>
                        <CombinedGeometry.Geometry2>
                            <EllipseGeometry Center="75,95" RadiusX="28" RadiusY="28"/>
                        </CombinedGeometry.Geometry2>
                    </CombinedGeometry>
                </Path.Data>
            </Path>
            <Path Fill="White">
                <Path.Data>
                    <EllipseGeometry Center="75,95" RadiusX="28" RadiusY="28"/>
                </Path.Data>
            </Path>
        </Canvas>

        <LinearGradientBrush x:Key="dishDescrBackBrush" EndPoint="0.5,1" StartPoint="0.5,0" Opacity="0.7">
            <GradientStop Color="{DynamicResource appColorDarkPink}" Offset="1"/>
            <GradientStop Color="Black" Offset="0.508"/>
            <GradientStop Color="Black" Offset="0"/>
        </LinearGradientBrush>

        <ControlTemplate x:Key="dishListBoxItemTemplate" TargetType="{x:Type ListBoxItem}">
            <Border Background="{TemplateBinding Background}"
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}"
                Padding="{TemplateBinding Padding}">
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
        </ControlTemplate>
        <Style x:Key="dishListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template" Value="{StaticResource dishListBoxItemTemplate}"/>
            <EventSetter Event="RequestBringIntoView" Handler="lstDishes_RequestBringIntoView"/>
        </Style>

        <Style x:Key="addButtonTextStyle" TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="{Binding Path=ActualHeight, ElementName=gridDishBottomButtons, Converter={StaticResource DishAddButtonFontSize}, Mode=OneWay}"/>
            <!--<Style.Triggers>
                <EventTrigger RoutedEvent="TouchDown">
                    
                </EventTrigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="Orange"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                </Trigger>
            </Style.Triggers>-->
        </Style>

        <!--шаблон панели блюда-->
        <DataTemplate x:Key="dishItemTemplate">
            <Border x:Name="dishItemBorder"  
                    Background="Transparent"  BorderThickness="0"
                    Width="{Binding Converter={StaticResource getAppSetValue}, ConverterParameter=dishPanelWidth}" 
                    Margin="{Binding Converter={StaticResource getDishMargin}}">
                <Grid x:Name="gridDish">
                    <Grid.RowDefinitions>
                        <!-- 0. заголовок -->
                        <RowDefinition Height="{Binding Converter={StaticResource getAppSetValue}, ConverterParameter=dishPanelHeaderRowHeight}"/>
                        <RowDefinition Height="{Binding Converter={StaticResource getAppSetValue}, ConverterParameter=dishPanelRowMargin1}"/>
                        <!-- 2. изображение и  описание -->
                        <RowDefinition Height="{Binding Converter={StaticResource getAppSetValue}, ConverterParameter=dishPanelImageRowHeight}"/>
                        <RowDefinition Height="{Binding Converter={StaticResource getAppSetValue}, ConverterParameter=dishPanelRowMargin2}"/>
                        <!-- 4. гарниры, если есть -->
                        <RowDefinition x:Name="garnishRow"/>
                        <RowDefinition x:Name="row5"/>
                        <!-- 6. кнопки добавления -->
                        <RowDefinition Height="{Binding Converter={StaticResource getAppSetValue}, ConverterParameter=dishPanelAddButtonRowHeight}"/>
                    </Grid.RowDefinitions>

                    <!--грид заголовка блюда-->
                    <Grid x:Name="dishHeader">
                        <WrapPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                            <!-- маркеры блюда -->
                            <ItemsControl ItemsSource="{Binding Marks}" Margin="0,0,8,15"
                                Height="{Binding Converter={StaticResource getAppSetValue}, ConverterParameter=dishPanelHeaderFontSize}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Image Source="{Binding Image}"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>

                            <!--заголовок с наименованием, количеством и ед.изм.-->
                            <TextBlock Foreground="Black" TextWrapping="Wrap" VerticalAlignment="Center" TextAlignment="Center">
                                <Run Text="{Binding Path=langNames, Converter={StaticResource langDictToText}}" FontWeight="Bold" FontSize="{Binding Converter={StaticResource getAppSetValue}, ConverterParameter=dishPanelHeaderFontSize}"/>
                                <Run Text="{Binding Path=UnitCount, StringFormat={}  {0}}" FontStyle="Italic" FontSize="{Binding Converter={StaticResource getAppSetValue}, ConverterParameter=dishPanelTextFontSize}"/>
                                <Run Text="{Binding Path=langUnitNames, Converter={StaticResource langDictToText}}" 
                     FontSize="{Binding Converter={StaticResource getAppSetValue}, ConverterParameter=dishPanelTextFontSize}"/>
                            </TextBlock>
                        </WrapPanel>
                    </Grid>

                    <!--изображение блюда-->
                    <Rectangle Grid.Row="2" StrokeThickness="0" RadiusX="{Binding Converter={StaticResource getAppSetValue}, ConverterParameter=dishPanelImageCornerRadius}" RadiusY="{Binding RelativeSource={RelativeSource Self}, Path=RadiusX}" Margin="0">
                        <Rectangle.Fill>
                            <ImageBrush
                                ImageSource="{Binding Image}" Stretch="Fill"/>
                        </Rectangle.Fill>
                    </Rectangle>

                    <!-- 2. описание блюда-->
                    <Grid x:Name="dishDescrText" Grid.Row="2">
                        <!--текст описания-->
                        <Viewbox x:Name="dishDescrViewBox" Width="{Binding Converter={StaticResource getAppSetValue}, ConverterParameter=dishPanelWidth}" Height="{Binding Converter={StaticResource getAppSetValue}, ConverterParameter=dishPanelImageRowHeight}" PreviewMouseUp="btnShowDishDescription_MouseDown" Visibility="Collapsed">
                            <Viewbox.LayoutTransform>
                                    <ScaleTransform/>
                            </Viewbox.LayoutTransform>
                            <Grid Width="100" Height="83">
                                <Border CornerRadius="5" Background="{StaticResource dishDescrBackBrush}"/>
                                <TextBlock Margin="10" Foreground="White" VerticalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap" Text="{Binding langDescriptions, Converter={StaticResource langDictToText}}" FontSize="6"/>
                            </Grid>
                        </Viewbox>
                        <!--кнопка показа описания блюда  (dishPanelDescrButtonSize) -->
                        <Viewbox HorizontalAlignment="Right" VerticalAlignment="Top" Height="{Binding Converter={StaticResource getAppSetValue}, ConverterParameter=dishPanelDescrButtonSize}" Width="{Binding Converter={StaticResource getAppSetValue}, ConverterParameter=dishPanelDescrButtonSize}" Margin="0,10,10,0"
                               MouseUp="btnShowDishDescription_MouseDown">
                            <Grid Width="10" Height="10">
                                <Path x:Name="btnDishDescr" Fill="White">
                                    <Path.Data>
                                        <EllipseGeometry Center="5,5" RadiusX="5" RadiusY="5"/>
                                    </Path.Data>
                                </Path>
                                <TextBlock x:Name="dishDescrSymbol" Text="i" Foreground="Black" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="7"/>
                            </Grid>
                        </Viewbox>
                    </Grid>

                    <!--4. грид с кнопками гарниров-->
                    <Grid x:Name="gridDishGarnish" Grid.Row="4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Grid x:Name="brdGarnish1" Uid="0" Grid.Column="0" Visibility="{Binding Garnishes, Converter={StaticResource garnishVisibilityConverter}, ConverterParameter=1}"
                                 MouseUp = "borderGarnish_MouseUp" TouchUp = "brdGarnish_TouchDown">
                            <Viewbox HorizontalAlignment="Left">
                                <StaticResource ResourceKey="garnBase1" x:Name="garnBase"/>
                            </Viewbox>
                            <TextBlock x:Name="txtGarnName1" Style="{StaticResource garnishTextStyle}"
                                       HorizontalAlignment="Left" 
                                           Text="{Binding Garnishes, Converter={StaticResource garnishLangTextConverter}, ConverterParameter=1}"/>
                            <TextBlock x:Name="txtGarnPrice1" Style="{StaticResource garnishPriceStyle}"
                                       HorizontalAlignment="Left"
                                           Text="{Binding Garnishes, Converter={StaticResource garnishPriceConverter}, ConverterParameter=1, StringFormat={StaticResource priceFormatString}}"/>
                        </Grid>

                        <Grid x:Name="brdGarnish2" Uid="1" Grid.Column="1" Visibility="{Binding Garnishes, Converter={StaticResource garnishVisibilityConverter}, ConverterParameter=2}"
                                 MouseUp = "borderGarnish_MouseUp" TouchUp = "brdGarnish_TouchDown">
                            <Viewbox HorizontalAlignment="Center">
                                <StaticResource ResourceKey="garnBase1"/>
                            </Viewbox>
                            <TextBlock x:Name="txtGarnName2" Style="{StaticResource garnishTextStyle}"
                                       HorizontalAlignment="Center" 
                                           Text="{Binding Garnishes, Converter={StaticResource garnishLangTextConverter}, ConverterParameter=2}"/>
                                <TextBlock x:Name="txtGarnPrice2" Style="{StaticResource garnishPriceStyle}"
                                           HorizontalAlignment="Center"
                                           Text="{Binding Garnishes, Converter={StaticResource garnishPriceConverter}, ConverterParameter=2, StringFormat={StaticResource priceFormatString}}"/>
                        </Grid>

                        <Grid x:Name="brdGarnish3" Uid="2" Grid.Column="2" Visibility="{Binding Garnishes, Converter={StaticResource garnishVisibilityConverter}, ConverterParameter=3}"
                                 MouseUp = "borderGarnish_MouseUp" TouchUp = "brdGarnish_TouchDown">
                            <Viewbox HorizontalAlignment="Right">
                                <StaticResource ResourceKey="garnBase1"/>
                            </Viewbox>
                            <TextBlock x:Name="txtGarnName3" Style="{StaticResource garnishTextStyle}"
                                       HorizontalAlignment="Right"
                                           Text="{Binding Garnishes, Converter={StaticResource garnishLangTextConverter}, ConverterParameter=3}"/>
                                <TextBlock x:Name="txtGarnPrice3" Style="{StaticResource garnishPriceStyle}"
                                       HorizontalAlignment="Right"
                                           Text="{Binding Garnishes, Converter={StaticResource garnishPriceConverter}, ConverterParameter=3, StringFormat={StaticResource priceFormatString}}"/>
                        </Grid>
                    </Grid>

                    <!--грид с кнопками добавления блюда, имена контролов - НЕ удалять! 
                    всего 3 надписи: две для блюд с ингредиентами и одна для блюд без ингредиентов
                    -->
                    <Grid x:Name="gridDishBottomButtons" Grid.Row="6" HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="{Binding Converter={StaticResource getAppSetValue}, ConverterParameter=dishPanelAddButtonHeight}">

                        <!--бордер с тенью-->
                        <Border x:Name="shadowedBorder" CornerRadius="{Binding Converter={StaticResource getAppSetValue}, ConverterParameter=dishPanelAddButtonShadowCornerRadius}" Margin="8,0" Background="{DynamicResource addButtonBackgroundTextColor}" Effect="{StaticResource shadowEffect}"/>

                        <!--просто нижележащая надпись для блюд с ингредиентами-->
                        <Border x:Name="txtDishWithIngrNotActive" CornerRadius="10" BorderBrush="Gray" BorderThickness="1"  Background="White" SnapsToDevicePixels="True" UseLayoutRounding="True" Margin="1">
                            <TextBlock Foreground="Gray" Style="{StaticResource centeredElement}"
                                Text="{Binding langBtnSelGarnishText, Converter={StaticResource langDictToText}}" FontSize="{Binding Path=ActualHeight, ElementName=gridDishBottomButtons, Converter={StaticResource DishAddButtonFontSize}}" />
                        </Border>

                        <!--кнопка для выделенного блюда с ингредиентами-->
                        <Border x:Name="txtDishWithIngr" CornerRadius="10" Background="{StaticResource addButtonBackgroundTextColor}" SnapsToDevicePixels="True"
                            MouseUp="txtDishAdd_MouseDown" TouchUp="txtDishAdd_TouchDown">
                            <TextBlock Foreground="White" Style="{StaticResource centeredElement}"
                            Text="{Binding langBtnAddDishText, Converter={StaticResource langDictToText}}" 
                            FontSize="{Binding Path=ActualHeight, ElementName=gridDishBottomButtons, Converter={StaticResource DishAddButtonFontSize}}" />
                        </Border>

                        <!--кнопка для блюд без ингредиентов, на них сразу цена-->
                        <Grid x:Name="txtDishWithoutIngr" MouseUp="txtDishAdd_MouseDown" TouchUp="txtDishAdd_TouchDown">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <!-- бордер с ценой -->
                            <Border Grid.Column="0" Background="{DynamicResource addButtonBackgroundPriceColor}"
                                CornerRadius="10,0,0,10">
                                <TextBlock x:Name="txtDishPrice" Style="{StaticResource addButtonTextStyle}" Text="{Binding Path=Price, StringFormat={StaticResource priceFormatString}}"/>
                            </Border>
                            <!-- бордер с текстом -->
                            <Border Grid.Column="1" Background="{DynamicResource addButtonBackgroundTextColor}"  CornerRadius="0,10,10,0">
                                <TextBlock Style="{StaticResource addButtonTextStyle}"
                                    Text="{Binding {x:Null}, ConverterParameter=appSet.btnSelectDishText, Converter={StaticResource langDictToText}}"/>
                            </Border>

                        </Grid>
                    </Grid>

                </Grid>
            </Border>

            <DataTemplate.Triggers>
                <!--если нет гарниров, то сразу показать кнопку с ценой-->
                <DataTrigger Binding="{Binding Garnishes, Converter={StaticResource isNullValueConverter}, Mode=OneWay}" Value="True">
                    <Setter TargetName="txtDishWithoutIngr" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="shadowedBorder" Property="Border.Visibility" Value="Visible"/>
                    <Setter TargetName="txtDishWithIngrNotActive" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="txtDishWithIngr" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="garnishRow" Property="Height" Value="0"/>
                    <Setter TargetName="row5" Property="Height" Value="0"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Garnishes, Converter={StaticResource isNullValueConverter}, Mode=OneWay}" Value="False">
                    <Setter TargetName="txtDishWithoutIngr" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="shadowedBorder" Property="Border.Visibility" Value="Hidden"/>
                    <Setter TargetName="txtDishWithIngrNotActive" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="txtDishWithIngr" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="garnishRow" Property="Height" Value="{Binding Converter={StaticResource getAppSetValue}, ConverterParameter=dishPanelGarnishesRowHeight}"/>
                    <Setter TargetName="row5" Property="Height" Value="{Binding Converter={StaticResource getAppSetValue}, ConverterParameter=dishPanelRowMargin2}"/>
                </DataTrigger>
            </DataTemplate.Triggers>

        </DataTemplate>

    </Window.Resources>

    <Grid UseLayoutRounding="True">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="5*"/>
        </Grid.ColumnDefinitions>

        <Image Grid.Column="1" Source="AppImages\bg 3hor 1920x1080.png" Stretch="UniformToFill" Opacity="0.3"/>

        <!--боковая панель - меню категорий блюд-->
        <Grid x:Name="gridMenuSide" Grid.Column="0" UseLayoutRounding="True" Background="{StaticResource appBackgroundColor}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>    <!-- 1. логотип -->
                <RowDefinition Height="*"/> <!-- 2. языковые кнопки -->
                <RowDefinition Height="8*"/>   <!-- 3. ListBox категорий блюд -->
                <RowDefinition Height="0.6*"/> <!-- 4. промокод -->
                <RowDefinition Height="0.6*"/> <!-- 5. промеж.между промокодом и кн.Оформить -->
                <RowDefinition Height="1.8*"/>   <!-- 6. цена и кнопка Оформить -->
            </Grid.RowDefinitions>
            <Image Grid.Row="0" Source="AppImages\logo1.png" Stretch="Uniform" Margin="20"/>

            <!--горизонтальный грид языковых кнопок-->
            <Grid x:Name="gridLang" Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.3*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="0.3*"/>
                </Grid.ColumnDefinitions>
                <Border x:Name="btnLangUa" Grid.Column="1" Background="{StaticResource appBackgroundColor}" MouseUp="lblButtonLang_MouseDown"  TouchUp="lblButtonLang_TouchDown">
                    <Border x:Name="btnLangUaInner" Style="{StaticResource langButtonBorderUncheckedStyle}">
                        <TextBlock x:Name="lblLangUa" Text="Укр" Style="{StaticResource langTextStyle}"/>
                    </Border>
                </Border>
                <Border x:Name="btnLangRu" Grid.Column="2" Background="{StaticResource appBackgroundColor}" MouseUp="lblButtonLang_MouseDown"  TouchUp="lblButtonLang_TouchDown">
                    <Border x:Name="btnLangRuInner" Style="{StaticResource langButtonBorderUncheckedStyle}">
                        <TextBlock x:Name="lblLangRu" Text="Рус" Style="{StaticResource langTextStyle}"/>
                    </Border>
                </Border>
                <Border x:Name="btnLangEn" Grid.Column="3" Background="{StaticResource appBackgroundColor}" MouseUp="lblButtonLang_MouseDown"  TouchUp="lblButtonLang_TouchDown">
                    <Border x:Name="btnLangEnInner" Style="{StaticResource langButtonBorderUncheckedStyle}">
                        <TextBlock x:Name="lblLangEng" Text="Eng" Style="{StaticResource langTextStyle}"/>
                    </Border>
                </Border>
            </Grid>

            <ListBox x:Name="lstMenuFolders" Grid.Row="2" Margin="0,10"
                     Background="{DynamicResource appBackgroundColor}" 
                     BorderThickness="0"
                     ItemContainerStyle="{StaticResource menuItemStyle}"
                     ItemTemplate="{DynamicResource menuDataTemplate}" 
                     HorizontalContentAlignment="Stretch" SelectionChanged="lstMenuFolders_SelectionChanged" SelectionMode="Single"/>

            <!--промо панель-->
            <Grid Grid.Row="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.5*"/>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="0.5*"/>
                </Grid.ColumnDefinitions>
                <Border Grid.Column="1" x:Name="brdPromoCode" Background="{StaticResource appNotSelectedItemColor}"
                        CornerRadius="{Binding RelativeSource={RelativeSource AncestorType=Grid},Converter={StaticResource cornerRadiusLeft}, ConverterParameter=0.2, Path=ActualHeight, Mode=OneWay}"/>
                <TextBox x:Name="txtPromoCode" Grid.Column="1" Style="{StaticResource centeredElement}" Background="Transparent" BorderThickness="0" TextWrapping="Wrap" Foreground="Black" Opacity="0.6" Margin="5,0"
                         Text="{Binding {x:Null}, Converter={StaticResource langDictToText}, ConverterParameter=appSet.invitePromoText, Mode=OneWay}"
                         FontSize="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=ActualHeight, Mode=OneWay, Converter={StaticResource multiplyParamConv}, ConverterParameter=0.3}"
                         />

                <Border Grid.Column="2" Background="Black"
                        CornerRadius="{Binding RelativeSource={RelativeSource AncestorType=Grid},Converter={StaticResource cornerRadiusRight}, ConverterParameter=0.2, Path=ActualHeight, Mode=OneWay}"/>
                <TextBlock x:Name="lblPromoCode" Grid.Column="2" Style="{StaticResource centeredElement}" Text="OK" Foreground="White"
                        FontSize="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=ActualHeight, Mode=OneWay, Converter={StaticResource multiplyParamConv}, ConverterParameter=0.3}"
                           />
            </Grid>

            <!--кнопка ОФОРМИТЬ-->
            <Border Grid.Row="6" Style="{StaticResource buttonOrderPrice}"
                    MouseUp="btnShowCart_MouseUp" TouchUp="btnShowCart_TouchUp">
                <StackPanel VerticalAlignment="Center">
                    <TextBlock x:Name="txtOrderPrice" TextAlignment="Center" Foreground="{StaticResource addButtonBackgroundTextColor}"
                               Text="{Binding {x:Null}, Converter={StaticResource getOrderPrice}, StringFormat={StaticResource priceFormatString}}"
                           FontSize="{Binding Path=ActualWidth, ElementName=gridMenuSide, Converter={StaticResource multiplyParamConv}, ConverterParameter=0.14, Mode=OneWay}">
                        <TextBlock.Effect>
                            <DropShadowEffect Direction="315" Color="DarkGreen" ShadowDepth="5" BlurRadius="10"/>
                        </TextBlock.Effect>
                    </TextBlock>
                    <TextBlock x:Name="lblMakeOrderText" TextAlignment="Center"
                               Text="{Binding {x:Null}, Converter={StaticResource langDictToText}, ConverterParameter=appSet.btnCreateOrderText, Mode=OneWay}"
                           FontSize="{Binding Path=ActualWidth, ElementName=gridMenuSide, Converter={StaticResource multiplyParamConv}, ConverterParameter=0.09}"/>
                </StackPanel>
            </Border>

        </Grid>
        
        <DockPanel x:Name="dishItemsBorder" Grid.Column="1" LastChildFill="True">
            <local:AniScrollViewer x:Name="scrollDishes" CanContentScroll="False" HorizontalContentAlignment="Center"
                          VerticalScrollBarVisibility="Hidden"
                                   
                  ScrollChanged="scrollDishes_ScrollChanged"
                  PreviewMouseLeftButtonDown="scrollDishes_PreviewMouseLeftButtonDown"
                  PreviewMouseLeftButtonUp="scrollDishes_MouseLeftButtonUp" 
                  PreviewMouseMove = "scrollDishes_MouseMove"

                  PreviewTouchDown="scrollDishes_PreviewTouchDown"
                  PreviewTouchUp="scrollDishes_PreviewTouchUp"
                  PreviewTouchMove="scrollDishes_PreviewTouchMove"
                      >
                <DockPanel>
                    <ListBox Grid.Column="1" HorizontalAlignment="Center" x:Name="lstDishes" IsHitTestVisible="True"
                         VirtualizingPanel.ScrollUnit="Pixel"
                         ItemsSource="{Binding ElementName=lstMenuFolders, Path=SelectedItem.Dishes}"
                     ItemTemplate="{StaticResource dishItemTemplate}" 
                     ItemContainerStyle="{StaticResource dishListBoxItemStyle}"
                     >
                    <ListBox.Template>  <!-- для прокрутки мышью -->
                        <ControlTemplate>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </ControlTemplate>
                    </ListBox.Template>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel x:Name="dishesListPanel"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>

                </ListBox>
                </DockPanel>
            </local:AniScrollViewer>
        </DockPanel>

        <Viewbox x:Name="btnScrollDown" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Bottom"
                 Width="{Binding ElementName=dishItemsBorder, Path=ActualWidth, Converter={StaticResource multiplyParamConv}, ConverterParameter=0.15}" Height="{Binding RelativeSource={RelativeSource Self}, Path=Width}" >
            <Canvas Width="100" Height="100" MouseDown="btnScrollDown_MouseDown">
            <Path>
                <Path.Fill>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" Opacity="0.7">
                        <GradientStop Color="DarkMagenta" Offset="1"/>
                        <GradientStop Color="Black" Offset="0.4"/>
                        <GradientStop Color="Black" Offset="0"/>
                    </LinearGradientBrush>
                </Path.Fill>
                <Path.Data>
                    <PathGeometry>
                        <PathFigure StartPoint="0,100" IsClosed="True" IsFilled="True">
                            <ArcSegment Point="100,100" Size="50,50" SweepDirection="Clockwise"/>
                        </PathFigure>
                    </PathGeometry>
                </Path.Data>
            </Path>
            <Path x:Name="signDown" Stroke="White" StrokeThickness="2" Data="M40,75 L50,85 L60,75"/>
        </Canvas>
        </Viewbox>
        
        <Viewbox x:Name="btnScrollUp" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Top"
                 Width="{Binding ElementName=dishItemsBorder, Path=ActualWidth, Converter={StaticResource multiplyParamConv}, ConverterParameter=0.15}" Height="{Binding RelativeSource={RelativeSource Self}, Path=Width}" >
            <Canvas Width="100" Height="100" MouseDown="btnScrollUp_MouseDown">
                <Path>
                    <Path.Fill>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" Opacity="0.7">
                            <GradientStop Color="DarkMagenta" Offset="0"/>
                            <GradientStop Color="Black" Offset="1"/>
                        </LinearGradientBrush>
                    </Path.Fill>
                    <Path.Data>
                        <PathGeometry>
                            <PathFigure StartPoint="0,0" IsClosed="True" IsFilled="True">
                                <ArcSegment Point="100,0" Size="50,50" />
                            </PathFigure>
                        </PathGeometry>
                    </Path.Data>
                </Path>
                <Path x:Name="signUp" Stroke="White" StrokeThickness="2" Data="M40,25 L50,15 L60,25"/>
            </Canvas>
        </Viewbox>

    </Grid>
</Window>


