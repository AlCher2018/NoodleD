<Window x:Class="WpfClient.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfClient"
        mc:Ignorable="d"
        Title="MainWindow" 
        WindowStyle="None" WindowState="Maximized" WindowStartupLocation="CenterScreen" 
        Closed="Window_Closed"
        >

    <Window.Resources>
        <local:MultiplyParamValueConverter x:Key="multiplyParamDefVal1Conv" DefaultValue="1"/>
        <local:MultiplyValueConverter x:Key="DishAddButtonFontSize" Multiplier="0.4"/>

        <local:AddDishButtonVisibilityConverter x:Key="addDishButtonVisibilityConverter"/>
        <local:GarnishBrushConverter x:Key="garnishBackgroundConverter" Mode="Background"/>
        <local:GarnishBrushConverter x:Key="garnishForegroundConverter" Mode="Foreground"/>
        <local:GarnishVisibilityConverter x:Key="garnishVisibilityConverter"/>

        <local:WidthToMarginConverter x:Key="leftMargin"/>

        <Style x:Key="langButtonBorderUncheckedStyle" TargetType="Border">
            <Setter Property="BorderBrush" Value="{DynamicResource appSelectedItemColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="2,0"/>
            <Setter Property="Background" Value="{DynamicResource appNotSelectedItemColor}"/>
            <Setter Property="Control.Foreground" Value="Black"/>
            <Setter Property="Height">
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource getMinValue}">
                        <Binding Path="ActualHeight" ElementName="gridLang" Mode="OneWay"/>
                        <Binding Path="ActualWidth" ElementName="gridMenuSide" Mode="OneWay"/>
                    </MultiBinding>
                </Setter.Value>
            </Setter>
            <Setter Property="Width" Value="{Binding Height, RelativeSource={RelativeSource Self}, Mode=OneWay}"/>
            <Setter Property="CornerRadius" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}, Converter={StaticResource multiplyParamConv}, ConverterParameter=0.5, Mode=OneWay}"/>
            <EventSetter Event="Control.MouseUp" Handler="lblButtonLang_MouseDown"/>
            <EventSetter Event="Control.TouchUp" Handler="lblButtonLang_TouchDown"/>
            <Style.Triggers>
                <Trigger Property="Control.IsMouseOver" Value="True">
                    <Setter Property="Control.Background" Value="DarkViolet" />
                    <Setter Property="Control.Foreground" Value="LightYellow" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="langButtonBorderCheckedStyle" TargetType="Border">
            <Setter Property="BorderBrush" Value="{DynamicResource appSelectedItemColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="{DynamicResource appSelectedItemColor}"/>
            <Setter Property="Control.Foreground" Value="Black"/>
            <Setter Property="Control.FontWeight" Value="Bold" />
            <Setter Property="Height">
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource getMinValue}">
                        <Binding Path="ActualHeight" ElementName="gridLang" Mode="OneWay"/>
                        <Binding Path="ActualWidth" ElementName="gridMenuSide" Mode="OneWay"/>
                    </MultiBinding>
                </Setter.Value>
            </Setter>
            <Setter Property="Width" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}, Mode=OneWay}"/>
            <Setter Property="CornerRadius" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}, Converter={StaticResource multiplyParamConv}, ConverterParameter=0.5, Mode=OneWay}" />
        </Style>

        <Style x:Key="langTextStyle" TargetType="TextBlock" BasedOn="{StaticResource centeredElement}">
            <Setter Property="FontSize" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource AncestorType=Border}, Converter={StaticResource multiplyParamDefVal1Conv}, ConverterParameter=0.35, Mode=OneWay}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0,0,0,3"/>
        </Style>

        <Style x:Key="buttonOrderPrice">
            <Setter Property="Control.Background" Value="#FFEFB523"/>
            <Setter Property="Control.Foreground" Value="Black"/>
            <Setter Property="Control.FontSize" Value="20"/>
            <Setter Property="Control.FontWeight" Value="Bold"/>
            <Style.Triggers>
                <Trigger Property="Control.IsMouseOver" Value="True">
                    <Setter Property="Control.Background" Value="LightPink" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="menuListBoxItemTemplate" TargetType="{x:Type ListBoxItem}">
            <Border Background="{TemplateBinding Background}"
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}"
                Padding="{TemplateBinding Padding}">
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
        </ControlTemplate>
        <DataTemplate x:Key="menuDataTemplate">
            <Grid Margin="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>
                <Image Source="{Binding MenuFolder.Image}" Margin="0,5"
                       Width="{Binding Path=ActualWidth, ElementName=gridMenuSide, Converter={StaticResource multiplyParamConv}, ConverterParameter=0.2}"
                       Height="{Binding Path=ActualWidth, ElementName=gridMenuSide, Converter={StaticResource multiplyParamConv}, ConverterParameter=0.2}"/>
                <TextBlock Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,5,0,5"
                           Text="{Binding langNames, Converter={StaticResource langDictToText}}"
                           FontSize="{Binding Path=ActualWidth, ElementName=gridMenuSide, Converter={StaticResource multiplyParamDefVal1Conv}, ConverterParameter=0.1}"/>
            </Grid>
        </DataTemplate>

        <Style x:Key="menuItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="10,7" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Foreground" Value="{DynamicResource appNotSelectedItemColor}"/>
            <Setter Property="Template" Value="{StaticResource menuListBoxItemTemplate}"/>
            <Style.Triggers>
                <!--<Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="Yellow"/>
                    --><!--<Setter Property="Background" Value="{DynamicResource mainMenuSelectedItemColor}"/>--><!--
                </Trigger>-->
                <Trigger Property="IsSelected" Value="True">
                    <!--<Setter Property="Foreground" Value="Yellow"/>-->
                    <Setter Property="Background" Value="{DynamicResource mainMenuSelectedItemColor}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True"/>
                        <Condition Property="IsSelected" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Foreground" Value="{DynamicResource appSelectedItemColor}"/>
                </MultiTrigger>
                <!--<MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                        <Condition Property="Selector.IsSelected" Value="True"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Panel.Background"  Value="#3D26A0DA"/>
                    <Setter Property="Border.BorderBrush" Value="#FFFFA0DA"/>
                </MultiTrigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{DynamicResource ResourceKey={x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>-->

            </Style.Triggers>
        </Style>

        <Style x:Key="borderGarnish">
            <Setter Property="Control.Height" Value="{Binding RelativeSource={RelativeSource  AncestorType=Grid, Mode=FindAncestor}, Path=ActualHeight}"/>
            <Setter Property="Control.Width" Value="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}"/>
            <Setter Property="Border.Background" Value="{Binding SelectedGarnishes, Converter={StaticResource garnishBackgroundConverter}}"/>
            <Setter Property="Border.CornerRadius" Value="5"/>
        </Style>

        <Style x:Key="garnishTextStyle" TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Margin" Value="5"/>
        </Style>

        <Style x:Key="garnishPriceStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="0,0,0,2"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
        </Style>
        <Path x:Key="garnBase1" x:Shared="False"  Fill="{StaticResource appBackgroundColor}">
            <Path.Data>
                <CombinedGeometry GeometryCombineMode="Exclude">
                    <CombinedGeometry.Geometry1>
                        <RectangleGeometry Rect="0,0,100,100" RadiusX="10" RadiusY="10"/>
                    </CombinedGeometry.Geometry1>
                    <CombinedGeometry.Geometry2>
                        <EllipseGeometry Center="50,95" RadiusX="28" RadiusY="28"/>
                    </CombinedGeometry.Geometry2>
                </CombinedGeometry>
            </Path.Data>
        </Path>
        <Path x:Key="garnBase2" x:Shared="False"  Fill="White">
            <Path.Data>
                <EllipseGeometry Center="50,95" RadiusX="28" RadiusY="28"/>
            </Path.Data>
        </Path>

        <!--панель блюд - WrapPanel-->
        <ItemsPanelTemplate x:Key="dishesListPanelTemplate">
            <WrapPanel x:Name="dishesListPanel" Width="{Binding ElementName=dishItemsBorder, Path= ActualWidth, Converter={StaticResource multiplyParamConv}, ConverterParameter=0.95}"/>
        </ItemsPanelTemplate>

        <ControlTemplate x:Key="dishListBoxItemTemplate" TargetType="{x:Type ListBoxItem}">
            <Border Background="{TemplateBinding Background}"
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}"
                Padding="{TemplateBinding Padding}">
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
        </ControlTemplate>
        <Style x:Key="dishListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template" Value="{StaticResource dishListBoxItemTemplate}"/>
            <EventSetter Event="RequestBringIntoView" Handler="lstDishes_RequestBringIntoView"/>
        </Style>

        <Style x:Key="addButtonTextStyle" TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="{Binding Path=ActualHeight, ElementName=gridDishBottomButtons, Converter={StaticResource DishAddButtonFontSize}, Mode=OneWay}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="Orange"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="dishItemTemplate">
            <Border x:Name="dishItemBorder"  
                    Background="Transparent"  BorderThickness="0"
                    Width="{Binding ElementName=dishItemsBorder, Path=ActualWidth, Converter={StaticResource multiplyParamConv}, ConverterParameter=0.25, Mode=OneWay}" 
                    Margin="{Binding ActualWidth, Converter={StaticResource leftMargin}, Mode=OneWay, ElementName=dishItemsBorder}"
                    >
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Garnishes, Converter={StaticResource isNullValueConverter}}" Value="True">
                                <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth, Converter={StaticResource multiplyParamConv}, ConverterParameter=1.2}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Garnishes, Converter={StaticResource isNullValueConverter}}" Value="False">
                                <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth, Converter={StaticResource multiplyParamConv}, ConverterParameter=1.4}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid x:Name="gridDish">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="{Binding ActualWidth, Mode=OneWay, ElementName=dishItemBorder, Converter={StaticResource multiplyParamConv}, ConverterParameter=0.2}"/>
                        <RowDefinition Height="10*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="2*"/>
                    </Grid.RowDefinitions>
                    
                    <!--грид заголовка блюда-->
                    <Grid x:Name="dishHeader">
                        <WrapPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                            <!--маркеры блюда-->
                            <ListBox ItemsSource="{Binding Marks}" BorderThickness="0" Background="Transparent" Margin="0,0,0,20" SnapsToDevicePixels="True" Focusable="False"  IsHitTestVisible="True" ScrollViewer.CanContentScroll="False" FocusVisualStyle="{x:Null}"
                        ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled"
                     Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Grid, Mode=FindAncestor} , Converter={StaticResource multiplyParamConv}, ConverterParameter=0.4}"
                     >
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem">
                                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                        <Setter Property="Padding" Value="0"/>
                                        <Setter Property="Margin" Value="0"/>
                                        <Setter Property="BorderThickness" Value="0" />
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Image Source="{Binding Image}"/>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                            </ListBox>
                            <!--заголовок с наименованием, количеством и ед.изм.-->
                            <TextBlock Foreground="Black" TextWrapping="Wrap" VerticalAlignment="Center">
                <Run Text="{Binding Path=langNames, Converter={StaticResource langDictToText}}" FontWeight="Bold"
                     FontSize="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource AncestorType=Grid}, Converter={StaticResource multiplyParamConv}, ConverterParameter=0.3}"/>
                <Run Text="  "/>
                <Run Text="{Binding Path=UnitCount}" FontStyle="Italic"
                     FontSize="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource AncestorType=Grid}, Converter={StaticResource multiplyParamConv}, ConverterParameter=0.25}"/>
                <Run Text="{Binding Path=langUnitNames, Converter={StaticResource langDictToText}}" 
                     FontSize="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource AncestorType=Grid}, Converter={StaticResource multiplyParamConv}, ConverterParameter=0.25}"/>
                            </TextBlock>
                        </WrapPanel>
                    </Grid>

                    <!--изображение блюда-->
                    <Rectangle Grid.Row="1" StrokeThickness="0" RadiusX="10" RadiusY="10" Margin="0,0,0,10">
                        <Rectangle.Fill>
                            <ImageBrush
                                ImageSource="{Binding Image}" Stretch="Fill"/>
                        </Rectangle.Fill>
                    </Rectangle>
                    
                    <!--описание блюда-->
                    <Grid x:Name="dishDescrText" Grid.Row="1" Margin="0,0,0,10" Visibility="Hidden">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="7*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="7*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <!--текст описания-->
                        <Border Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Grid.RowSpan="3" CornerRadius="10">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" Opacity="0.7">
                                    <GradientStop Color="{DynamicResource appColorDarkPink}" Offset="1"/>
                                    <GradientStop Color="Black" Offset="0.508"/>
                                    <GradientStop Color="Black" Offset="0"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>

                        <TextBlock Grid.Row="1" Grid.Column="1" Foreground="White" VerticalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap"
                             Text="{Binding langDescriptions, Converter={StaticResource langDictToText}}"   
                                   FontSize="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource AncestorType=Grid}, Converter={StaticResource multiplyParamConv}, ConverterParameter=0.07}"
                                   MouseUp="btnShowDishDescription_MouseDown" TouchUp="btnShowDishDescription_TouchDown"
                                   />

                    </Grid>
                    
                    <!--кнопка показа описания блюда-->
                    <Grid x:Name="btnShowDishDescription" Grid.Row="1" Margin="0,10,10,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="7*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="7*"/>
                        </Grid.RowDefinitions>

                        <Viewbox Grid.Row="0" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Bottom" 
                                 MouseUp="btnShowDishDescription_MouseDown" TouchUp="btnShowDishDescription_TouchDown">
                            <Grid Width="10" Height="10">
                                <Path x:Name="btnDishDescr" Fill="White">
                                    <Path.Data>
                                        <EllipseGeometry Center="5,5" RadiusX="5" RadiusY="5"/>
                                    </Path.Data>
                                </Path>
                                <TextBlock Text="i" Foreground="Black" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="7"/>
                            </Grid>
                        </Viewbox>
                    </Grid>

                    <!--грид с кнопками гарниров-->
                    <Grid x:Name="gridDishGarnish" Grid.Row="2" Margin="0,8,0,0" 
              Visibility="{Binding Garnishes, Converter={StaticResource garnishVisibilityConverter}, ConverterParameter=0}"
              Height="{Binding ActualWidth, Mode=OneWay, ElementName=dishItemBorder, Converter={StaticResource multiplyParamConv}, ConverterParameter=0.25}"
              >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Viewbox x:Name="brdGarnish1" Uid="0" Grid.Column="0" HorizontalAlignment="Left" Stretch="Uniform"
                                 Visibility="{Binding Garnishes, Converter={StaticResource garnishVisibilityConverter}, ConverterParameter=1}"
                                 MouseUp = "borderGarnish_MouseUp" TouchUp = "brdGarnish_TouchDown">
                            <Grid Height="100" Width="100" >
                                <StaticResource ResourceKey="garnBase1"/>
                                <StaticResource ResourceKey="garnBase2"/>
                                <TextBlock x:Name="txtGarnName1" Style="{StaticResource garnishTextStyle}"
                                           Text="{Binding Garnishes, Converter={StaticResource garnishLangTextConverter}, ConverterParameter=1}"/>
                                <TextBlock x:Name="txtGarnPrice1" Style="{StaticResource garnishPriceStyle}"
                                           Text="{Binding Garnishes, Converter={StaticResource garnishPriceConverter}, ConverterParameter=1, StringFormat={StaticResource priceFormatString}}"/>
                            </Grid>
                        </Viewbox>

                        <Viewbox x:Name="brdGarnish2" Uid="1" Grid.Column="1" HorizontalAlignment="Center" Stretch="Uniform"
                                 Visibility="{Binding Garnishes, Converter={StaticResource garnishVisibilityConverter}, ConverterParameter=2}"
                                 MouseUp = "borderGarnish_MouseUp" TouchUp = "brdGarnish_TouchDown">
                            <Grid Height="100" Width="100" >
                                <StaticResource ResourceKey="garnBase1"/>
                                <StaticResource ResourceKey="garnBase2"/>
                                <TextBlock x:Name="txtGarnName2" Style="{StaticResource garnishTextStyle}"
                                           Text="{Binding Garnishes, Converter={StaticResource garnishLangTextConverter}, ConverterParameter=2}"/>
                                <TextBlock x:Name="txtGarnPrice2" Style="{StaticResource garnishPriceStyle}"
                                           Text="{Binding Garnishes, Converter={StaticResource garnishPriceConverter}, ConverterParameter=2, StringFormat={StaticResource priceFormatString}}"/>
                            </Grid>
                        </Viewbox>

                        <Viewbox x:Name="brdGarnish3" Uid="2" Grid.Column="2" HorizontalAlignment="Right" Stretch="Uniform"
                                 Visibility="{Binding Garnishes, Converter={StaticResource garnishVisibilityConverter}, ConverterParameter=3}"
                                 MouseUp = "borderGarnish_MouseUp" TouchUp = "brdGarnish_TouchDown">
                            <Grid Height="100" Width="100" >
                                <StaticResource ResourceKey="garnBase1"/>
                                <StaticResource ResourceKey="garnBase2"/>
                                <TextBlock x:Name="txtGarnName3" Style="{StaticResource garnishTextStyle}"
                                           Text="{Binding Garnishes, Converter={StaticResource garnishLangTextConverter}, ConverterParameter=3}"/>
                                <TextBlock x:Name="txtGarnPrice3" Style="{StaticResource garnishPriceStyle}"
                                           Text="{Binding Garnishes, Converter={StaticResource garnishPriceConverter}, ConverterParameter=3, StringFormat={StaticResource priceFormatString}}"/>
                            </Grid>
                        </Viewbox>
                    </Grid>

                    <!--грид с кнопками добавления блюда, имена контролов - НЕ удалять! 
                    всего 3 надписи: две для блюд с ингредиентами и одна для блюд без ингредиентов
                    -->
                    <Grid x:Name="gridDishBottomButtons" Grid.Row="3" Margin="0,10,0,0" HorizontalAlignment="Stretch">
                        
                        <!--просто нижележащая надпись для блюд с ингредиентами-->
                        <Border x:Name="txtDishWithIngrNotActive" CornerRadius="7" BorderBrush="Gray" BorderThickness="1"  Background="White" SnapsToDevicePixels="True" UseLayoutRounding="True">
                            <TextBlock Foreground="Gray" Style="{StaticResource centeredElement}"
                                Text="{Binding langBtnSelGarnishText, Converter={StaticResource langDictToText}}" FontSize="{Binding Path=ActualHeight, ElementName=gridDishBottomButtons, Converter={StaticResource DishAddButtonFontSize}}" />
                        </Border>

                        <!--кнопка для выделенного блюда с ингредиентами-->
                        <Border x:Name="txtDishWithIngr" CornerRadius="7" Background="{DynamicResource addButtonBackgroundTextColor}" SnapsToDevicePixels="True" Effect="{StaticResource addButtonShadow}"
                                MouseUp="txtDishAdd_MouseDown" TouchUp="txtDishAdd_TouchDown">
                            <TextBlock Foreground="White" Style="{StaticResource centeredElement}"
                                Text="{Binding langBtnAddDishText, Converter={StaticResource langDictToText}}" 
                                FontSize="{Binding Path=ActualHeight, ElementName=gridDishBottomButtons, Converter={StaticResource DishAddButtonFontSize}}" />
                        </Border>
                        
                        <!--кнопка для блюд без ингредиентов, на них сразу цена-->
                        <Grid x:Name="txtDishWithoutIngr" Effect="{StaticResource addButtonShadow}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <!-- бордер с ценой -->
                            <Border Grid.Column="0" Background="{StaticResource addButtonBackgroundPriceColor}"
                                CornerRadius="7,0,0,7">
                                <TextBlock x:Name="txtDishPrice" Style="{StaticResource addButtonTextStyle}" Text="{Binding Path=Price, StringFormat={StaticResource priceFormatString}}"/>
                            </Border>
                            <!-- бордер с текстом -->
                            <Border Grid.Column="1" Background="{StaticResource addButtonBackgroundTextColor}"  CornerRadius="0,7,7,0"
                                MouseUp="txtDishAdd_MouseDown" TouchUp="txtDishAdd_TouchDown">
                                <TextBlock Style="{StaticResource addButtonTextStyle}"
                                    Text="{Binding {x:Null}, ConverterParameter=appSet.btnSelectDishText, Converter={StaticResource langDictToText}}"/>
                            </Border>
                        </Grid>
                    </Grid>
                </Grid>
            </Border>

            <DataTemplate.Triggers>
                <!--если нет гарниров, то сразу показать кнопку с ценой-->
                <DataTrigger Binding="{Binding Garnishes, Converter={StaticResource isNullValueConverter}, Mode=OneWay}" Value="True">
                    <Setter TargetName="txtDishWithoutIngr" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="txtDishWithIngrNotActive" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="txtDishWithIngr" Property="Visibility" Value="Hidden"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Garnishes, Converter={StaticResource isNullValueConverter}, Mode=OneWay}" Value="False">
                    <Setter TargetName="txtDishWithoutIngr" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="txtDishWithIngrNotActive" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="txtDishWithIngr" Property="Visibility" Value="Hidden"/>
                </DataTrigger>
            </DataTemplate.Triggers>

        </DataTemplate>

    </Window.Resources>

    <Grid UseLayoutRounding="True">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="5*"/>
        </Grid.ColumnDefinitions>

        <Image Grid.Column="1" Source="AppImages\Background.png" Stretch="UniformToFill"/>

        <!--боковая панель - меню категорий блюд-->
        <Grid x:Name="gridMenuSide" Grid.Column="0" UseLayoutRounding="True" Background="{DynamicResource appBackgroundColor}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>    <!-- 1. логотип -->
                <RowDefinition Height="0.7*"/> <!-- 2. языковые кнопки -->
                <RowDefinition Height="8*"/>   <!-- 3. ListBox категорий блюд -->
                <RowDefinition Height="0.6*"/> <!-- 4. промокод -->
                <RowDefinition Height="0.5*"/> <!-- 5. промеж.между промокодом и кн.Оформить -->
                <RowDefinition Height="*"/>   <!-- 6. цена и кнопка Оформить -->
            </Grid.RowDefinitions>
            <Image Grid.Row="0" Source="AppImages\logo1.png" Stretch="Uniform" Margin="20"/>
            
            <!--горизонтальный грид языковых кнопок-->
            <Grid x:Name="gridLang" Grid.Row="1" Margin="0,10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.3*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="0.3*"/>
                </Grid.ColumnDefinitions>
                <Border x:Name="btnLangUa" Grid.Column="1" Style="{StaticResource langButtonBorderUncheckedStyle}">
                    <TextBlock x:Name="lblLangUa" Text="Укр" Style="{StaticResource langTextStyle}"/>
                </Border>
                <Border x:Name="btnLangRu" Grid.Column="2" Style="{StaticResource langButtonBorderUncheckedStyle}">
                    <TextBlock x:Name="lblLangRu" Text="Рус" Style="{StaticResource langTextStyle}"/>
                </Border>
                <Border x:Name="btnLangEn" Grid.Column="3" Style="{StaticResource langButtonBorderUncheckedStyle}">
                    <TextBlock x:Name="lblLangEng" Text="Eng" Style="{StaticResource langTextStyle}"/>
                </Border>
            </Grid>

            <ListBox x:Name="lstMenuFolders" Grid.Row="2" Margin="0,10" 
                     Background="{DynamicResource appBackgroundColor}" BorderThickness="0"
                     ItemContainerStyle="{StaticResource menuItemStyle}"
                     ItemTemplate="{DynamicResource menuDataTemplate}" 
                     HorizontalContentAlignment="Stretch" SelectionChanged="lstMenuFolders_SelectionChanged" SelectionMode="Single"/>

            <!--промо панель-->
            <Grid Grid.Row="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.5*"/>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="0.5*"/>
                </Grid.ColumnDefinitions>
                <Border Grid.Column="1" x:Name="brdPromoCode" Background="{StaticResource appNotSelectedItemColor}"
                        CornerRadius="{Binding RelativeSource={RelativeSource AncestorType=Grid},Converter={StaticResource cornerRadiusLeft}, ConverterParameter=0.2, Path=ActualHeight, Mode=OneWay}"/>
                <TextBox x:Name="txtPromoCode" Grid.Column="1" Style="{StaticResource centeredElement}" Background="Transparent" BorderThickness="0" TextWrapping="Wrap" Foreground="Black" Opacity="0.6" Margin="5,0"
                         Text="{Binding {x:Null}, Converter={StaticResource langDictToText}, ConverterParameter=appSet.invitePromoText, Mode=OneWay}"
                         FontSize="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=ActualHeight, Mode=OneWay, Converter={StaticResource multiplyParamConv}, ConverterParameter=0.3}"
                         />

                <Border Grid.Column="2" Background="Black"
                        CornerRadius="{Binding RelativeSource={RelativeSource AncestorType=Grid},Converter={StaticResource cornerRadiusRight}, ConverterParameter=0.2, Path=ActualHeight, Mode=OneWay}"/>
                <TextBlock x:Name="lblPromoCode" Grid.Column="2" Style="{StaticResource centeredElement}" Text="OK" Foreground="White"
                        FontSize="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=ActualHeight, Mode=OneWay, Converter={StaticResource multiplyParamConv}, ConverterParameter=0.3}"
                           />
            </Grid>

            <!--кнопка ОФОРМИТЬ-->
            <Border Grid.Row="6" Style="{StaticResource buttonOrderPrice}"
                    MouseUp="btnShowCart_MouseUp" TouchUp="btnShowCart_TouchUp">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <TextBlock x:Name="txtOrderPrice" Style="{StaticResource centeredElement}"
                               Text="{Binding {x:Null}, Converter={StaticResource getOrderPrice}, StringFormat={StaticResource priceFormatString}}"
                           FontSize="{Binding Path=ActualWidth, ElementName=gridMenuSide, Converter={StaticResource multiplyParamConv}, ConverterParameter=0.09, Mode=OneWay}"/>
                    <TextBlock Text="  "/>
                    <TextBlock x:Name="lblMakeOrderText" Style="{StaticResource centeredElement}"
                               Text="{Binding {x:Null}, Converter={StaticResource langDictToText}, ConverterParameter=appSet.btnCreateOrderText, Mode=OneWay}"
                           FontSize="{Binding Path=ActualWidth, ElementName=gridMenuSide, Converter={StaticResource multiplyParamConv}, ConverterParameter=0.09}"/>
                </StackPanel>
            </Border>

        </Grid>

        <!--список блюд -->
        <DockPanel x:Name="dishItemsBorder" Grid.Column="1">
            <ScrollViewer x:Name="scrollDishes" Grid.Column="0" CanContentScroll="False"
                  PreviewMouseLeftButtonDown="scrollDishes_PreviewMouseLeftButtonDown"
                  PreviewMouseLeftButtonUp="scrollDishes_MouseLeftButtonUp" 
                  PreviewMouseMove = "scrollDishes_MouseMove"
                  
                  PreviewTouchDown="scrollDishes_PreviewTouchDown"
                  PreviewTouchUp="scrollDishes_PreviewTouchUp"
                  PreviewTouchMove="scrollDishes_PreviewTouchMove"
                      >
                <ListBox x:Name="lstDishes" Background="Transparent" IsHitTestVisible="True"
                         VirtualizingPanel.ScrollUnit="Pixel"
                         ItemsSource="{Binding ElementName=lstMenuFolders, Path=SelectedItem.Dishes}"
                     ItemTemplate="{StaticResource dishItemTemplate}" 
                     ItemsPanel="{StaticResource dishesListPanelTemplate}"
                     ItemContainerStyle="{StaticResource dishListBoxItemStyle}"
                     >
                    <ListBox.Template>  <!-- для прокрутки мышью -->
                        <ControlTemplate>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </ControlTemplate>
                    </ListBox.Template>
                </ListBox>

            </ScrollViewer>
        </DockPanel>
        
    </Grid>
</Window>


